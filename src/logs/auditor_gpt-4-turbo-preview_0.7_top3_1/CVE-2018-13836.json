[
    {
        "function_name": "multiTransfer",
        "code": "function multiTransfer(address[] _addresses, uint[] _amounts) public returns (bool success) { require(_addresses.length <= 100 && _addresses.length == _amounts.length); uint totalAmount; for (uint a = 0; a < _amounts.length; a++) { totalAmount += _amounts[a]; } require(totalAmount > 0 && balances[msg.sender] >= totalAmount); balances[msg.sender] -= totalAmount; for (uint b = 0; b < _addresses.length; b++) { if (_amounts[b] > 0) { balances[_addresses[b]] += _amounts[b]; Transfer(msg.sender, _addresses[b], _amounts[b]); } } return true; }",
        "vulnerability": "Batch Overflow",
        "reason": "In the 'multiTransfer' function, the summation of '_amounts' could overflow without detection, allowing an attacker to pass a crafted array of amounts that overflows the 'totalAmount', making it very small. This could lead to arbitrary large transfers from the sender's balance, as the balance check passes due to the overflow.",
        "file_name": "2018-13836.sol",
        "label": "Integer Overflow",
        "description": "An integer overflow vulnerability exists in the function multiTransfer of Rocket Coin (XRC), an Ethereum token smart contract. An attacker could use it to set any user's balance."
    },
    {
        "function_name": "fallback function",
        "code": "function() public payable { require(airDropStatus && balances[owner] >= airDropAmount && !participants[msg.sender] && tx.gasprice >= airDropGasPrice); balances[owner] -= airDropAmount; balances[msg.sender] += airDropAmount; Transfer(owner, msg.sender, airDropAmount); participants[msg.sender] = true; }",
        "vulnerability": "DoS with (Unexpected) Revert",
        "reason": "Since the fallback function requires a minimum gas price for participation in the airdrop, miners could be incentivized to manipulate the gas price to participate in the airdrop, potentially leading to denial of service or unexpected reverts due to gas price fluctuations.",
        "file_name": "2018-13836.sol",
        "label": "Integer Overflow",
        "description": "An integer overflow vulnerability exists in the function multiTransfer of Rocket Coin (XRC), an Ethereum token smart contract. An attacker could use it to set any user's balance."
    },
    {
        "function_name": "withdrawFunds",
        "code": "function withdrawFunds(address _token) public returns (bool success) { require(msg.sender == owner); if (_token == address(0)) { owner.transfer(this.balance); } else { Token ERC20 = Token(_token); ERC20.transfer(owner, ERC20.balanceOf(this)); } return true; }",
        "vulnerability": "Unchecked External Call",
        "reason": "The 'withdrawFunds' function transfers ERC20 tokens or Ether to the owner without checking the result of these transfers. If the call to the ERC20 token fails (e.g., due to a lack of balance), the contract will not revert, potentially leading to loss of funds or unexpected behavior.",
        "file_name": "2018-13836.sol",
        "label": "Integer Overflow",
        "description": "An integer overflow vulnerability exists in the function multiTransfer of Rocket Coin (XRC), an Ethereum token smart contract. An attacker could use it to set any user's balance."
    }
]