[
    {
        "function_name": "mint",
        "code": "function mint(address holder, uint value) public { require(msg.sender == ico); require(value > 0); require(totalSupply + value <= TOKEN_LIMIT); balances[holder] += value; totalSupply += value; Transfer(0x0, holder, value); }",
        "vulnerability": "Arithmetic overflow",
        "reason": "The mint function does not use SafeMath for its arithmetic operations. This can lead to an overflow if 'totalSupply + value' exceeds the maximum value a uint256 can hold, allowing more tokens to be minted than intended.",
        "file_name": "2018-11335.sol",
        "label": "Integer Overflow",
        "description": "GVToken Genesis Vision (GVT) is a smart contract running on Ethereum. The mint function has an integer overflow that allows minted tokens to be arbitrarily retrieved by the contract owner."
    },
    {
        "function_name": "transfer",
        "code": "function transfer(address _to, uint _value) public returns (bool) { require(_to != address(0)); require(!isFrozen); return super.transfer(_to, _value); }",
        "vulnerability": "Frozen token bypass",
        "reason": "While the transfer function checks if tokens are frozen, an attacker might take advantage of the direct interaction with the 'transferFrom' function in the inherited 'StandardToken' contract if 'isFrozen' is not properly checked there, leading to unauthorized token transfers during the freeze period.",
        "file_name": "2018-11335.sol",
        "label": "Integer Overflow",
        "description": "GVToken Genesis Vision (GVT) is a smart contract running on Ethereum. The mint function has an integer overflow that allows minted tokens to be arbitrarily retrieved by the contract owner."
    },
    {
        "function_name": "setMigrationAgent",
        "code": "function setMigrationAgent(address _agent) external { require(migrationAgent == 0); require(msg.sender == migrationMaster); migrationAgent = _agent; }",
        "vulnerability": "Single point of failure",
        "reason": "The function allows setting a migration agent by only checking if the 'migrationAgent' is 0 and if the caller is the 'migrationMaster'. This poses a risk if the migrationMaster's private key is compromised, as an attacker could set a malicious migration agent, potentially leading to loss of funds.",
        "file_name": "2018-11335.sol",
        "label": "Integer Overflow",
        "description": "GVToken Genesis Vision (GVT) is a smart contract running on Ethereum. The mint function has an integer overflow that allows minted tokens to be arbitrarily retrieved by the contract owner."
    }
]